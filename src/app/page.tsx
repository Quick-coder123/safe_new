'use client'

import { useState, useEffect } from 'react'
import ConfigurationError from '@/components/ConfigurationError'
import Notification from '@/components/Notification'
import { 
  calculateRental,
  calculateDays,
  formatDateForInput, 
  formatDateForDisplay,
  parseDateFromInput,
  getDaysDeclension,
  type CalculationInput,
  type CalculationResult
} from '@/utils/calculator'
import { useAuth } from '@/contexts/AuthContext'
import { useConfig } from '@/hooks/useConfig'

export default function HomePage() {
  const { isAdmin } = useAuth()
  const { config, loading: configLoading, error: configError } = useConfig()
  
  const [formData, setFormData] = useState<CalculationInput>({
    category: 'I',
    contractType: 'new',
    coverageType: 'insurance',
    startDate: new Date(Date.UTC(new Date().getUTCFullYear(), new Date().getUTCMonth(), new Date().getUTCDate())),
    endDate: new Date(Date.UTC(new Date().getUTCFullYear(), new Date().getUTCMonth(), new Date().getUTCDate() + 31)),
    penalty: 0,
    trustDocuments: 0,
    packages: 0,
  })

  const [termDays, setTermDays] = useState<number>(31)

  const [result, setResult] = useState<CalculationResult | null>(null)
  const [paymentDetails, setPaymentDetails] = useState({
    recipient: '',
    edrpou: '',
    iban: '',
    purpose: '–û–ø–ª–∞—Ç–∞ –∑–∞ –æ—Ä–µ–Ω–¥—É —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–æ–≥–æ —Å–µ–π—Ñ—É',
  })
  const [insurancePaymentUrl, setInsurancePaymentUrl] = useState('')

  // –°—Ç–∞–Ω –¥–ª—è notification
  const [notification, setNotification] = useState<{
    isOpen: boolean
    title: string
    message: string
    type: 'info' | 'warning' | 'error' | 'success'
  }>({
    isOpen: false,
    title: '',
    message: '',
    type: 'info'
  })

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É notification
  const showNotification = (title: string, message: string, type: 'info' | 'warning' | 'error' | 'success' = 'info') => {
    setNotification({
      isOpen: true,
      title,
      message,
      type
    })
  }

  // –ü–µ—Ä–µ—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –¥–∞–Ω–∏—Ö
  useEffect(() => {
    if (!config) return // –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ config –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å—Å—è
    
    try {
      const calculationResult = calculateRental(formData, config)
      setResult(calculationResult)
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É:', error)
      showNotification('–ü–æ–º–∏–ª–∫–∞', '–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ.', 'error')
      setResult(null)
    }
  }, [formData, config])

  const handleInputChange = (field: keyof CalculationInput, value: any) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  const handleDateChange = (field: 'startDate' | 'endDate', value: string) => {
    const date = parseDateFromInput(value)
    setFormData(prev => ({
      ...prev,
      [field]: date
    }))
    
    // –Ø–∫—â–æ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –ø–æ—á–∞—Ç–∫–æ–≤–∞ –¥–∞—Ç–∞, –ø–µ—Ä–µ—Å—á–∏—Ç—É—î–º–æ –∫—ñ–Ω—Ü–µ–≤—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–µ—Ä–º—ñ–Ω—É
    if (field === 'startDate') {
      const endDate = new Date(date.getTime() + (termDays - 1) * 24 * 60 * 60 * 1000)
      setFormData(prev => ({
        ...prev,
        endDate: endDate
      }))
    }
    
    // –Ø–∫—â–æ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –∫—ñ–Ω—Ü–µ–≤–∞ –¥–∞—Ç–∞, –ø–µ—Ä–µ—Å—á–∏—Ç—É—î–º–æ —Ç–µ—Ä–º—ñ–Ω
    if (field === 'endDate') {
      const calculatedDays = calculateDays(formData.startDate, date)
      if (calculatedDays > 0) {
        setTermDays(calculatedDays)
      }
    }
  }

  const handleTermDaysChange = (days: number) => {
    setTermDays(days)
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –∫—ñ–Ω—Ü–µ–≤—É –¥–∞—Ç—É
    const endDate = new Date(formData.startDate.getTime() + (days - 1) * 24 * 60 * 60 * 1000)
    setFormData(prev => ({
      ...prev,
      endDate: endDate
    }))
  }

  const generatePaymentDetails = () => {
    if (!result) return

    const paymentAmount = result.totalCost - result.insurance
    const updatedPurpose = `${paymentDetails.purpose}. –°—É–º–∞: ${paymentAmount.toFixed(2)} –≥—Ä–Ω`
    
    showNotification('–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏', `–û—Ç—Ä–∏–º—É–≤–∞—á: ${paymentDetails.recipient}
–ö–æ–¥ –Ñ–î–†–ü–û–£: ${paymentDetails.edrpou}
IBAN: ${paymentDetails.iban}
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É: ${updatedPurpose}
–°—É–º–∞: ${paymentAmount.toFixed(2)} –≥—Ä–Ω`, 'info')
  }

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text).then(() => {
      showNotification('–ì–æ—Ç–æ–≤–æ!', '–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –¥–æ –±—É—Ñ–µ—Ä—É –æ–±–º—ñ–Ω—É!', 'success')
    }).catch(() => {
      showNotification('–ü–æ–º–∏–ª–∫–∞', '–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ –¥–æ –±—É—Ñ–µ—Ä—É –æ–±–º—ñ–Ω—É', 'error')
    })
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ–∫–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞
  if (configLoading) {
    return (
      <div className="flex justify-center items-center min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
        <div className="text-center">
          <div className="relative mb-6">
            {/* –û—Å–Ω–æ–≤–Ω–∏–π —Å–ø—ñ–Ω–µ—Ä */}
            <div className="animate-spin rounded-full h-16 w-16 border-4 border-gray-200 border-t-blue-600 mx-auto"></div>
            {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞ —ñ–∫–æ–Ω–∫–∞ */}
            <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-2xl text-blue-600 animate-pulse">
              üîê
            </div>
          </div>
          <p className="text-gray-700 font-medium mb-3">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...</p>
          <div className="flex justify-center space-x-2">
            <div className="h-2 w-2 bg-blue-500 rounded-full animate-bounce"></div>
            <div className="h-2 w-2 bg-blue-400 rounded-full animate-bounce animation-delay-150"></div>
            <div className="h-2 w-2 bg-blue-300 rounded-full animate-bounce animation-delay-300"></div>
          </div>
        </div>
      </div>
    )
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫—É —è–∫—â–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∞—Å—å
  if (configError) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        <div className="text-center">
          <p className="text-red-600 mb-4">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó: {configError}</p>
          <p className="text-gray-600">–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –±–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</p>
        </div>
      </div>
    )
  }

  return (
    <>
      <ConfigurationError />
      <div className="space-y-6 animate-fadeIn">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é */}
      <div className="relative">        
        {/* –û—Å–Ω–æ–≤–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center transform transition-all duration-1000 animate-slideInDown">
        </div>
      </div>

      <div className={`grid grid-cols-1 gap-6 ${isAdmin ? 'lg:grid-cols-3' : 'lg:grid-cols-2'}`}>
        {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥—É */}
        <div className="calculator-card transform transition-all duration-700 hover:scale-105 hover:shadow-xl animate-slideInLeft">
          <h2 className="text-xl font-semibold mb-4" style={{color: '#1f2937'}}>–í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ</h2>
          
          <div className="space-y-4">
            {/* –ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Å–µ–π—Ñ—É */}
            <div className="form-group">
              <label className="form-label">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Å–µ–π—Ñ—É</label>
              <select 
                className="form-select animate-slideInUp"
                value={formData.category}
                onChange={(e) => handleInputChange('category', e.target.value)}
              >
                {config?.categories?.map(category => (
                  <option key={category.id} value={category.id}>
                    {category.name}
                  </option>
                )) || []}
              </select>
            </div>

            {/* –¢–∏–ø –¥–æ–≥–æ–≤–æ—Ä—É */}
            <div className="form-group">
              <label className="form-label">–¢–∏–ø –¥–æ–≥–æ–≤–æ—Ä—É</label>
              <select 
                className="form-select animate-slideInUp"
                value={formData.contractType}
                onChange={(e) => handleInputChange('contractType', e.target.value as 'new' | 'extension')}
              >
                <option value="new">–ù–æ–≤–∏–π</option>
                <option value="extension">–ü—Ä–æ–ª–æ–Ω–≥–∞—Ü—ñ—è</option>
              </select>
            </div>

            {/* –¢–∏–ø –ø–æ–∫—Ä–∏—Ç—Ç—è */}
            <div className="form-group">
              <label className="form-label">–¢–∏–ø –ø–æ–∫—Ä–∏—Ç—Ç—è</label>
              <select 
                className="form-select animate-slideInUp"
                value={formData.coverageType}
                onChange={(e) => handleInputChange('coverageType', e.target.value as 'insurance' | 'guarantee')}
              >
                <option value="insurance">–°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞</option>
                <option value="guarantee">–ì—Ä–æ—à–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è</option>
              </select>
            </div>

            {/* –î–∞—Ç–∏ —Ç–∞ —Ç–µ—Ä–º—ñ–Ω */}
            <div className="grid grid-cols-1 gap-4">
              <div className="form-group">
                <label className="form-label">–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É</label>
                <input 
                  type="date"
                  className="form-input form-input-animated"
                  value={formatDateForInput(formData.startDate)}
                  onChange={(e) => handleDateChange('startDate', e.target.value)}
                />
              </div>
              
              <div className="form-group">
                <label className="form-label">–¢–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏ (–¥–Ω—ñ–≤)</label>
                <input 
                  type="number"
                  className="form-input form-input-animated"
                  min="1"
                  max="365"
                  value={termDays}
                  onChange={(e) => handleTermDaysChange(parseInt(e.target.value) || 1)}
                  placeholder="–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤"
                />
                
                {/* –®–≤–∏–¥–∫–∏–π –≤–∏–±—ñ—Ä —Ç–µ—Ä–º—ñ–Ω—É */}
                <div className="flex flex-wrap gap-2 mt-2">
                  {[7, 14, 31, 60, 91, 181, 365].map(days => (
                    <button
                      key={days}
                      type="button"
                      onClick={() => handleTermDaysChange(days)}
                      className={`quick-select-btn px-3 py-1 text-xs rounded border transition-all duration-300 ease-in-out transform hover:scale-105 hover:-translate-y-0.5 active:scale-95 active:translate-y-0 ${
                        termDays === days 
                          ? 'active bg-blue-500 text-white border-blue-500 shadow-lg' 
                          : 'bg-white text-gray-700 border-gray-300 hover:bg-blue-50 hover:border-blue-300 hover:text-blue-700 hover:shadow-md'
                      }`}
                    >
                      {days === 7 ? '1 —Ç–∏–∂' : 
                       days === 14 ? '2 —Ç–∏–∂' :
                       days === 31 ? '1 –º—ñ—Å' :
                       days === 60 ? '2 –º—ñ—Å' :
                       days === 91 ? '3 –º—ñ—Å' :
                       days === 181 ? '6 –º—ñ—Å' :
                       days === 365 ? '1 —Ä—ñ–∫' : `${days}–¥`}
                    </button>
                  ))}
                </div>
                
                <p className="text-sm mt-1" style={{color: '#6b7280'}}>
                  –ö—ñ–Ω—Ü–µ–≤–∞ –¥–∞—Ç–∞: {formatDateForDisplay(formData.endDate)} 
                  {result && (
                    <span className="ml-2 font-medium" style={{color: '#2563eb'}}>
                      (—Ñ–∞–∫—Ç–∏—á–Ω–æ {result.days} {getDaysDeclension(result.days)})
                    </span>
                  )}
                </p>
              </div>
              
              <div className="form-group">
                <label className="form-label">–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ)</label>
                <input 
                  type="date"
                  className="form-input bg-gray-100"
                  value={formatDateForInput(formData.endDate)}
                  onChange={(e) => handleDateChange('endDate', e.target.value)}
                  title="–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–µ—Ä–º—ñ–Ω—É. –ú–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ –≤—Ä—É—á–Ω—É."
                />
              </div>
            </div>

            {/* –ü–µ–Ω—è */}
            <div className="form-group">
              <label className="form-label">–ü–µ–Ω—è (–≥—Ä–Ω, –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
              <input 
                type="number"
                className="form-input"
                min="0"
                step="0.01"
                placeholder="0.00"
                value={formData.penalty || ''}
                onChange={(e) => {
                  const val = e.target.value === '' ? 0 : parseFloat(e.target.value) || 0
                  handleInputChange('penalty', val)
                }}
              />
            </div>

            {/* –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ */}
            <div className="space-y-4">
              <h3 className="text-lg font-semibold text-gray-700 flex items-center">
                <svg className="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏
              </h3>
              <div className="grid grid-cols-2 gap-4">
                <div className="form-group">
                  <label className="form-label text-sm">
                    <svg className="w-4 h-4 mr-1 text-gray-500 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                    </svg>
                    –ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–≤—ñ—Ä–µ–Ω–æ—Å—Ç–µ–π
                  </label>
                  <input 
                    type="number"
                    className="form-input"
                    min="0"
                    step="1"
                    placeholder="–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å"
                    value={formData.trustDocuments === 0 ? '' : formData.trustDocuments}
                    onChange={(e) => {
                      const val = e.target.value === '' ? 0 : parseInt(e.target.value) || 0
                      handleInputChange('trustDocuments', val)
                    }}
                  />
                </div>
                <div className="form-group">
                  <label className="form-label text-sm">
                    <svg className="w-4 h-4 mr-1 text-gray-500 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                    </svg>
                    –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞–∫–µ—Ç—ñ–≤
                  </label>
                  <input 
                    type="number"
                    className="form-input"
                    min="0"
                    step="1"
                    placeholder="–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å"
                    value={formData.packages === 0 ? '' : formData.packages}
                    onChange={(e) => {
                      const val = e.target.value === '' ? 0 : parseInt(e.target.value) || 0
                      handleInputChange('packages', val)
                    }}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É */}
        <div className="calculator-card transform transition-all duration-700 hover:scale-105 hover:shadow-xl animate-slideInRight">
          <h2 className="text-xl font-semibold mb-4" style={{color: '#1f2937'}}>–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–∞—Ä—Ç–æ—Å—Ç—ñ</h2>
          
          {result && (
            <div className="space-y-4">
              {/* –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –≤–∏—Ö—ñ–¥–Ω–∏–π –¥–µ–Ω—å */}
              {result.isWeekend && (
                <div className="alert-warning">
                  ‚ö†Ô∏è –£–≤–∞–≥–∞! –î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è –ø—Ä–∏–ø–∞–¥–∞—î –Ω–∞ –≤–∏—Ö—ñ–¥–Ω–∏–π –¥–µ–Ω—å!
                </div>
              )}

              {/* –î–µ—Ç–∞–ª—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É */}
              <div className="bg-gray-50 rounded-lg p-4 space-y-3">
                <div className="flex justify-between">
                  <span style={{color: '#1f2937'}}>–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É:</span>
                  <span className="font-medium" style={{color: '#1f2937'}}>
                    {formData.startDate.toLocaleDateString('uk-UA')}
                  </span>
                </div>
                <div className="flex justify-between">
                  <span style={{color: '#1f2937'}}>–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è:</span>
                  <span className="font-medium" style={{color: '#1f2937'}}>
                    {formData.endDate.toLocaleDateString('uk-UA')}
                  </span>
                </div>
                <div className="flex justify-between">
                  <span style={{color: '#1f2937'}}>–¢–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏:</span>
                  <span className="font-medium" style={{color: '#1f2937'}}>{result.days} {getDaysDeclension(result.days)}</span>
                </div>
                <div className="flex justify-between">
                  <span style={{color: '#1f2937'}}>–¢–∞—Ä–∏—Ñ –∑–∞ –¥–µ–Ω—å:</span>
                  <span className="font-medium" style={{color: '#1f2937'}}>{result.safeRate.toFixed(2)} –≥—Ä–Ω</span>
                </div>
                <div className="flex justify-between">
                  <span style={{color: '#1f2937'}}>–í–∞—Ä—Ç—ñ—Å—Ç—å —Å–µ–π—Ñ—É:</span>
                  <span className="font-medium" style={{color: '#1f2937'}}>{result.safeCost.toFixed(2)} –≥—Ä–Ω</span>
                </div>
                {result.insurance > 0 && (
                  <div className="flex justify-between">
                    <span style={{color: '#1f2937'}}>–°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞:</span>
                    <span className="font-medium" style={{color: '#1f2937'}}>{result.insurance.toFixed(2)} –≥—Ä–Ω</span>
                  </div>
                )}
                {result.guarantee > 0 && (
                  <div className="flex justify-between">
                    <span style={{color: '#1f2937'}}>–ì—Ä–æ—à–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è:</span>
                    <span className="font-medium" style={{color: '#1f2937'}}>{result.guarantee.toFixed(2)} –≥—Ä–Ω</span>
                  </div>
                )}
                {result.trustDocumentsCost > 0 && (
                  <div className="flex justify-between items-center">
                    <span className="flex items-center" style={{color: '#1f2937'}}>
                      <svg className="w-4 h-4 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                      </svg>
                      –î–æ–≤—ñ—Ä–µ–Ω–æ—Å—Ç—ñ ({formData.trustDocuments} —à—Ç):
                    </span>
                    <span className="font-medium" style={{color: '#1f2937'}}>{result.trustDocumentsCost.toFixed(2)} –≥—Ä–Ω</span>
                  </div>
                )}
                {result.packagesCost > 0 && (
                  <div className="flex justify-between items-center">
                    <span className="flex items-center" style={{color: '#1f2937'}}>
                      <svg className="w-4 h-4 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                      </svg>
                      –ü–∞–∫–µ—Ç–∏ ({formData.packages} —à—Ç):
                    </span>
                    <span className="font-medium" style={{color: '#1f2937'}}>{result.packagesCost.toFixed(2)} –≥—Ä–Ω</span>
                  </div>
                )}
                {result.penalty > 0 && (
                  <div className="flex justify-between">
                    <span style={{color: '#1f2937'}}>–ü–µ–Ω—è:</span>
                    <span className="font-medium" style={{color: '#1f2937'}}>{result.penalty.toFixed(2)} –≥—Ä–Ω</span>
                  </div>
                )}
                <hr className="my-3" />
                <div className="flex justify-between text-lg font-bold">
                  <span style={{color: '#1f2937'}}>–ü—ñ–¥—Å—É–º–∫–æ–≤–∞ —Å—É–º–∞:</span>
                  <span style={{color: '#2563eb'}}>{result.totalCost.toFixed(2)} –≥—Ä–Ω</span>
                </div>
              </div>

              <div className="flex space-x-2 pt-2">
                <button 
                  className="btn-primary text-sm w-full btn-animated"
                  onClick={() => copyToClipboard(`
–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–∞—Ä—Ç–æ—Å—Ç—ñ –æ—Ä–µ–Ω–¥–∏ —Å–µ–π—Ñ—É:

–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: ${config?.categories?.find(cat => cat.id === formData.category)?.name || formData.category}
–¢–∏–ø –¥–æ–≥–æ–≤–æ—Ä—É: ${formData.contractType === 'new' ? '–ù–æ–≤–∏–π' : '–ü—Ä–æ–ª–æ–Ω–≥–∞—Ü—ñ—è'}
–¢–∏–ø –ø–æ–∫—Ä–∏—Ç—Ç—è: ${formData.coverageType === 'insurance' ? '–°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞' : '–ì—Ä–æ—à–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è'}

–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É: ${formData.startDate.toLocaleDateString('uk-UA')}
–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è: ${formData.endDate.toLocaleDateString('uk-UA')}
–¢–µ—Ä–º—ñ–Ω –æ—Ä–µ–Ω–¥–∏: ${result.days} ${getDaysDeclension(result.days)}
–¢–∞—Ä–∏—Ñ –∑–∞ –¥–µ–Ω—å: ${result.safeRate.toFixed(2)} –≥—Ä–Ω

–î–µ—Ç–∞–ª—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É:
- –í–∞—Ä—Ç—ñ—Å—Ç—å —Å–µ–π—Ñ—É: ${result.safeCost.toFixed(2)} –≥—Ä–Ω${result.insurance > 0 ? `
- –°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞: ${result.insurance.toFixed(2)} –≥—Ä–Ω` : ''}${result.guarantee > 0 ? `
- –ì—Ä–æ—à–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è: ${result.guarantee.toFixed(2)} –≥—Ä–Ω` : ''}${result.trustDocumentsCost > 0 ? `
- –î–æ–≤—ñ—Ä–µ–Ω–æ—Å—Ç—ñ: ${result.trustDocumentsCost.toFixed(2)} –≥—Ä–Ω` : ''}${result.packagesCost > 0 ? `
- –ü–∞–∫–µ—Ç–∏: ${result.packagesCost.toFixed(2)} –≥—Ä–Ω` : ''}${result.penalty > 0 ? `
- –ü–µ–Ω—è: ${result.penalty.toFixed(2)} –≥—Ä–Ω` : ''}

–ü–Ü–î–°–£–ú–ö–û–í–ê –°–£–ú–ê: ${result.totalCost.toFixed(2)} –≥—Ä–Ω
                  `.trim())}
                >
                  üìã –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫
                </button>
              </div>
            </div>
          )}
        </div>

        {/* –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤ - —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ */}
        {isAdmin && (
          <div className="calculator-card transform transition-all duration-700 hover:scale-105 hover:shadow-xl animate-slideInUp">
            <h2 className="text-xl font-semibold mb-4" style={{color: '#1f2937'}}>‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤</h2>
          
          <div className="space-y-4">
            <div className="form-group">
              <label className="form-label">–ù–∞–∑–≤–∞ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞</label>
              <input 
                type="text"
                className="form-input"
                value={paymentDetails.recipient}
                onChange={(e) => setPaymentDetails(prev => ({...prev, recipient: e.target.value}))}
                placeholder="–ù–∞–∑–≤–∞ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞"
              />
            </div>
            
            <div className="form-group">
              <label className="form-label">–ö–æ–¥ –Ñ–î–†–ü–û–£</label>
              <input 
                type="text"
                className="form-input"
                value={paymentDetails.edrpou}
                onChange={(e) => {
                  const value = e.target.value.replace(/\D/g, '').slice(0, 10)
                  setPaymentDetails(prev => ({...prev, edrpou: value}))
                }}
                placeholder="1234567890"
                maxLength={10}
                pattern="[0-9]{10}"
                title="–Ñ–î–†–ü–û–£ –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ —Ä—ñ–≤–Ω–æ 10 —Ü–∏—Ñ—Ä"
              />
            </div>
            
            <div className="form-group">
              <label className="form-label">IBAN</label>
              <input 
                type="text"
                className="form-input"
                value={paymentDetails.iban}
                onChange={(e) => setPaymentDetails(prev => ({...prev, iban: e.target.value}))}
                placeholder="UA123456789012345678901234567"
              />
            </div>
            
            <div className="form-group">
              <label className="form-label">–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É</label>
              <textarea 
                className="form-input"
                rows={2}
                value={paymentDetails.purpose}
                onChange={(e) => setPaymentDetails(prev => ({...prev, purpose: e.target.value}))}
                placeholder="–û–ø–∏—Å –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É"
              />
            </div>
            
            {formData.coverageType === 'insurance' && (
              <div className="form-group">
                <label className="form-label">–ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –æ–ø–ª–∞—Ç–∏ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞</label>
                <input 
                  type="url"
                  className="form-input"
                  value={insurancePaymentUrl}
                  onChange={(e) => setInsurancePaymentUrl(e.target.value)}
                  placeholder="https://..."
                />
              </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è */}
            {formData.coverageType === 'insurance' && (
              <div className="mt-4">
                <a 
                  href="https://ars.aiwa.in.ua/docs"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="w-full btn-primary inline-flex items-center justify-center"
                >
                  üõ°Ô∏è –û—Ñ–æ—Ä–º–∏—Ç–∏ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞
                </a>
              </div>
            )}

            {/* –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏ */}
            {result && (
              <div className="bg-blue-50 rounded-lg p-4 space-y-3 mt-6">
                <h3 className="font-semibold" style={{color: '#1e40af'}}>üìã –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏</h3>
                <div className="space-y-2 text-sm">
                  <div>
                    <span style={{color: '#1d4ed8'}}>–û—Ç—Ä–∏–º—É–≤–∞—á:</span>
                    <span className="ml-2" style={{color: '#1f2937'}}>{paymentDetails.recipient}</span>
                  </div>
                  <div>
                    <span style={{color: '#1d4ed8'}}>–ö–æ–¥ –Ñ–î–†–ü–û–£:</span>
                    <span className="ml-2" style={{color: '#1f2937'}}>{paymentDetails.edrpou}</span>
                  </div>
                  <div>
                    <span style={{color: '#1d4ed8'}}>IBAN:</span>
                    <span className="ml-2 font-mono" style={{color: '#1f2937'}}>{paymentDetails.iban}</span>
                  </div>
                  <div>
                    <span style={{color: '#1d4ed8'}}>–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è:</span>
                    <span className="ml-2" style={{color: '#1f2937'}}>{paymentDetails.purpose}</span>
                  </div>
                  <div>
                    <span style={{color: '#1d4ed8'}}>–°—É–º–∞:</span>
                    <span className="ml-2 font-bold" style={{color: '#1f2937'}}>
                      {(result.totalCost - result.insurance).toFixed(2)} –≥—Ä–Ω
                    </span>
                    {result.insurance > 0 && (
                      <div className="text-xs mt-1" style={{color: '#6b7280'}}>
                        * –°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞ ({result.insurance.toFixed(2)} –≥—Ä–Ω) –æ–ø–ª–∞—á—É—î—Ç—å—Å—è –æ–∫—Ä–µ–º–æ
                      </div>
                    )}
                  </div>
                  
                  {formData.coverageType === 'insurance' && insurancePaymentUrl && (
                    <div className="mt-3 pt-3 border-t border-blue-200">
                      <div>
                        <span style={{color: '#1d4ed8'}}>–û–ø–ª–∞—Ç–∞ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞:</span>
                        <div className="mt-1">
                          <a 
                            href={insurancePaymentUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="inline-flex items-center px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors"
                          >
                            üîó –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ–ø–ª–∞—Ç–∏
                          </a>
                        </div>
                      </div>
                    </div>
                  )}
                </div>
                
                <div className="flex space-x-2 pt-2">
                  <button 
                    className="btn-primary text-sm w-full btn-animated"
                    onClick={() => copyToClipboard(`
–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏:

–û—Ç—Ä–∏–º—É–≤–∞—á: ${paymentDetails.recipient}
–ö–æ–¥ –Ñ–î–†–ü–û–£: ${paymentDetails.edrpou}
IBAN: ${paymentDetails.iban}
–ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: ${paymentDetails.purpose}
–°—É–º–∞: ${(result.totalCost - result.insurance).toFixed(2)} –≥—Ä–Ω${result.insurance > 0 ? `
* –°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞ (${result.insurance.toFixed(2)} –≥—Ä–Ω) –æ–ø–ª–∞—á—É—î—Ç—å—Å—è –æ–∫—Ä–µ–º–æ` : ''}${formData.coverageType === 'insurance' && insurancePaymentUrl ? `

–ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –æ–ø–ª–∞—Ç–∏ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è: ${insurancePaymentUrl}` : ''}
                    `.trim())}
                  >
                    üìã –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏
                  </button>
                </div>
              </div>
            )}
          </div>
        </div>
        )}
      </div>

      {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∞—Ä–∏—Ñ–∏ */}
      <div className="calculator-card">
        <h2 className="text-xl font-semibold mb-4" style={{color: '#1f2937'}}>üìä –¢–∞—Ä–∏—Ñ–∏</h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* –¢–∞—Ä–∏—Ñ–∏ –Ω–∞ —Å–µ–π—Ñ–∏ */}
          <div>
            <h3 className="font-semibold mb-3" style={{color: '#1f2937'}}>–¢–∞—Ä–∏—Ñ–∏ –Ω–∞ —Å–µ–π—Ñ–∏ (–≥—Ä–Ω/–¥–µ–Ω—å, –∑ –ü–î–í)</h3>
            <div className="overflow-x-auto">
              <table className="rates-table">
                <thead>
                  <tr>
                    <th style={{color: '#1f2937', fontWeight: 'bold'}}>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è</th>
                    <th style={{color: '#1f2937', fontWeight: 'bold'}}>–¥–æ 30 –¥–Ω—ñ–≤</th>
                    <th style={{color: '#1f2937', fontWeight: 'bold'}}>31-90 –¥–Ω—ñ–≤</th>
                    <th style={{color: '#1f2937', fontWeight: 'bold'}}>91-180 –¥–Ω—ñ–≤</th>
                    <th style={{color: '#1f2937', fontWeight: 'bold'}}>181-365 –¥–Ω—ñ–≤</th>
                  </tr>
                </thead>
                <tbody>
                  {config?.categories?.map(category => (
                    <tr key={category.id} className={formData.category === category.id ? 'highlight' : ''}>
                      <td style={{color: '#1f2937', fontWeight: '600'}}>{category.name}</td>
                      <td style={{color: '#1f2937', textAlign: 'center'}}>{category.rates.up_to_30.toFixed(2)}</td>
                      <td style={{color: '#1f2937', textAlign: 'center'}}>{category.rates.from_31_to_90.toFixed(2)}</td>
                      <td style={{color: '#1f2937', textAlign: 'center'}}>{category.rates.from_91_to_180.toFixed(2)}</td>
                      <td style={{color: '#1f2937', textAlign: 'center'}}>{category.rates.from_181_to_365.toFixed(2)}</td>
                    </tr>
                  )) || []}
                </tbody>
              </table>
            </div>
          </div>

          {/* –°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞ */}
          <div>
            <h3 className="font-semibold mb-3" style={{color: '#1f2937'}}>–°—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–ª—é—á–∞ (–≥—Ä–Ω, –∑ –ü–î–í)</h3>
            <div className="space-y-2">
              {config?.insuranceRates?.map((rate, index) => (
                <div key={index} className="flex justify-between p-2 bg-gray-50 rounded">
                  <span style={{color: '#1f2937'}}>
                    {rate.min_days}-{rate.max_days} –¥–Ω—ñ–≤
                  </span>
                  <span className="font-medium" style={{color: '#1f2937'}}>
                    {rate.price.toFixed(2)} –≥—Ä–Ω
                  </span>
                </div>
              )) || []}
            </div>

            <div className="mt-4">
              <h3 className="font-semibold mb-3" style={{color: '#1f2937'}}>–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏</h3>
              <div className="space-y-2">
                <div className="flex justify-between p-2 bg-gray-50 rounded">
                  <span style={{color: '#1f2937'}}>–î–æ–≤—ñ—Ä–µ–Ω—ñ—Å—Ç—å</span>
                  <span className="font-medium" style={{color: '#1f2937'}}>
                    {config?.settings?.trust_document_price || '300'}.00 –≥—Ä–Ω
                  </span>
                </div>
                <div className="flex justify-between p-2 bg-gray-50 rounded">
                  <span style={{color: '#1f2937'}}>–ü–∞–∫–µ—Ç</span>
                  <span className="font-medium" style={{color: '#1f2937'}}>
                    {config?.settings?.package_price || '30'}.00 –≥—Ä–Ω
                  </span>
                </div>
                <div className="flex justify-between p-2 bg-blue-50 rounded border border-blue-200">
                  <div>
                    <span style={{color: '#1f2937'}}>–ì—Ä–æ—à–æ–≤–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è</span>
                    <div className="text-xs text-gray-600">–î–ª—è –Ω–æ–≤–∏—Ö –¥–æ–≥–æ–≤–æ—Ä—ñ–≤ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—é)</div>
                  </div>
                  <span className="font-medium" style={{color: '#1f2937'}}>
                    {config?.settings?.guarantee_amount || '3000'}.00 –≥—Ä–Ω
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    {/* Notification */}
    <Notification
      isOpen={notification.isOpen}
      title={notification.title}
      message={notification.message}
      type={notification.type}
      onClose={() => setNotification(prev => ({ ...prev, isOpen: false }))}
    />
    </>
  )
}
